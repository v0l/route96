name: Build and Publish Docker image

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME is derived from the repository name
  IMAGE_NAME: ${{ github.repository }}

jobs:

  get-version:
    name: Determine Version
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      id-token: write
      pull-requests: write
      security-events: write
      statuses: write
    outputs:
      SemVer: ${{ steps.get-version.outputs.SemVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.0
        with:
          versionSpec: "6.2.x"

      - name: Determine Version
        id: get-version 
        uses: gittools/actions/gitversion/execute@v3.2.0
        with:
          useConfigFile: true
      
      - name: Add version to Github Actions Summary
        run: |
          echo "#Version:" >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.get-version.outputs.SemVer }} >> $GITHUB_STEP_SUMMARY

  push_to_registry:
    if: github.ref == 'refs/heads/main'
    name: Push Docker image to GHCR
    runs-on: ubuntu-latest
    permissions:
      # Required to read the repository contents.
      contents: read
      # Required to push packages (Docker images) to GHCR.
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        # Using v5 for metadata-action
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag with branch name and short SHA on push to main
            type=ref,event=branch,suffix=-{{sha}}
            # Tag with 'latest' on push to main (default branch)
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          # Push only when on the main branch (effectively, as the trigger is on: push: branches: [main])
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          # Use labels generated by metadata-action (includes OCI standard labels)
          labels: ${{ steps.meta.outputs.labels }}