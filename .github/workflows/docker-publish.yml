name: Build and Publish Docker image

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  # IMAGE_NAME is derived from the repository name
  IMAGE_NAME: ${{ github.repository }}

jobs:

  get_version:
    name: Determine Version
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      id-token: write
      pull-requests: write
      security-events: write
      statuses: write
    outputs:
      SemVer: ${{ steps.get-version.outputs.SemVer }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.0
        with:
          versionSpec: "6.2.x"

      - name: Determine Version
        id: get-version 
        uses: gittools/actions/gitversion/execute@v3.2.0
      
      - name: Add version to Github Actions Summary
        run: |
          echo "#Version:" >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.get-version.outputs.SemVer }} >> $GITHUB_STEP_SUMMARY

  push_to_registry:
    needs: get_version
    name: Push Docker image to GHCR
    runs-on: ubuntu-latest
    permissions:
      # Required to read the repository contents.
      contents: read
      # Required to push packages (Docker images) to GHCR.
      packages: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        # Using v5 for metadata-action
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.get_version.outputs.SemVer }}
            type=raw,value=latest

      # Always build the image, as a test, but only push on a merge to main
      - name: Build and push Docker image
        id: build-and-push-image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          # Use labels generated by metadata-action (includes OCI standard labels)
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Add built image to Github Actions Summary
        run: |
          echo "# Image Built:" >> $GITHUB_STEP_SUMMARY
          echo $IMAGE_NAME:${{ steps.meta.outputs.tags[1] }} >> $GITHUB_STEP_SUMMARY

  # update_helm_deployment:
  #   needs: get_version
  #   name: Push Docker image to GHCR
  #   runs-on: ubuntu-latest
  #   permissions:
  #     # Required to read the repository contents.
  #     contents: write
  #     # Required to push packages (Docker images) to GHCR.
  #     packages: write
  #   steps:

    # TODO: Update the appVersion and chartVersion in deployment/route96/Charts.yaml, 
    # to use get_version.outputs.SemVer

    # TODO: Update the image.tag in deployment/route96/values.yaml to use get_version.outputs.SemVer.

    # TODO: Merge the updated branch to the release branch, which ArgoCD has been set to auto-sync against.