name: Publish Image and Release Deployment

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  get_version:
    name: Determine Version
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      id-token: write
      pull-requests: write
      security-events: write
      statuses: write
    outputs:
      SemVer: ${{ steps.get-version.outputs.SemVer }}
    steps:

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.0
        with:
          versionSpec: "6.2.x"

      - name: Determine Version
        id: get-version 
        uses: gittools/actions/gitversion/execute@v3.2.0
      
      - name: Output Version
        run: |
          echo "# Version:" >> $GITHUB_STEP_SUMMARY
          echo ${{ steps.get-version.outputs.SemVer }} >> $GITHUB_STEP_SUMMARY

  push_to_registry:
    needs: get_version
    if: github.ref == 'refs/heads/main'
    name: Push Docker image to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.get_version.outputs.SemVer }}
            type=raw,value=latest

      - name: Build and push Docker image
        id: build-and-push-image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Output Image Details
        if: steps.build-and-push-image.outcome == 'success'
        run: |
          echo "# Built and pushed the following images:" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' >> $GITHUB_STEP_SUMMARY

  merge_to_release:
    name: Merge to Release
    needs: push_to_registry
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: Check Out the Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge main Branch Locally
        shell: bash
        run: |
          git config --global user.name "$verse-ci"
          git config --global user.email "$ci@verse.app"
          git checkout release
          git merge -Xtheirs --no-commit origin/main

      - name: Apply Newest Version
        shell: bash
        run: |
          yq -i '.version = "${{ needs.get_version.outputs.SemVer }}"' ./deployment/route96/Chart.yaml
          yq -i '.appVersion = "${{ needs.get_version.outputs.SemVer }}"' ./deployment/route96/Chart.yaml
          yq -i '.image.tag = "${{ needs.get_version.outputs.SemVer }}"' ./deployment/route96/values.yaml

      - name: Commit and Push to Trigger Release
        shell: bash
        run: |
          git tag ${{ needs.get_version.outputs.SemVer }}
          git commit -a -m "Version ${{ needs.get_version.outputs.SemVer }} Release"
          git push
          git push --tags
